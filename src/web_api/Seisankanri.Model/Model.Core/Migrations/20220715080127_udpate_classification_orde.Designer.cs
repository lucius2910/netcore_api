// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Seisankanri.Model;

#nullable disable

namespace Model.Core.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    [Migration("20220715080127_udpate_classification_orde")]
    partial class udpate_classification_orde
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence<int>("sq_receive_order")
                .HasMin(1L);

            modelBuilder.Entity("Seisankanri.Model.Entities.Calendar", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("calendar_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("company_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid?>("companyid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<int>("open_status")
                        .HasColumnType("integer");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("companyid");

                    b.ToTable("calendars");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Category", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("category");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Classification", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("code1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("code2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<string>("name1")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("name2")
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<int?>("order")
                        .HasColumnType("integer");

                    b.Property<string>("remarks")
                        .HasMaxLength(240)
                        .HasColumnType("character varying(240)");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("value1")
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("value2")
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.HasKey("id");

                    b.ToTable("classifications");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Company", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("account_closing_month")
                        .HasColumnType("integer");

                    b.Property<string>("address1")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("address2")
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("ap_amt_conv_rd_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("ap_credit_limit")
                        .HasColumnType("integer");

                    b.Property<int?>("ap_credit_limit_ratio")
                        .HasColumnType("integer");

                    b.Property<string>("ap_currency_cd")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("ap_for_cur_amt_rd_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("ap_unitprice_conv_rd_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("ar_amt_conv_rd_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("ar_credit_limit")
                        .HasColumnType("integer");

                    b.Property<int?>("ar_credit_limit_ratio")
                        .HasColumnType("integer");

                    b.Property<string>("ar_currency_cd")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("ar_for_cur_amt_rd_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("ar_unitprice_conv_rd_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("area_cd")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("bank_account_name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("bank_account_number")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("bank_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("bank_commission_burden_f")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<int?>("bill_detail_f")
                        .HasColumnType("integer");

                    b.Property<string>("billing_cd")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("branch_f")
                        .HasColumnType("integer");

                    b.Property<string>("business_category_cd")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("capital")
                        .HasColumnType("integer");

                    b.Property<string>("carrier_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("carrier_div2")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("cc_bank_cd")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("cc_cash_limit1")
                        .HasColumnType("integer");

                    b.Property<int?>("cc_cash_limit2")
                        .HasColumnType("integer");

                    b.Property<int?>("cc_cash_ratio1")
                        .HasColumnType("integer");

                    b.Property<int?>("cc_cash_ratio2")
                        .HasColumnType("integer");

                    b.Property<string>("cc_div")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("commission_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("commission_paid_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("company_name1")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("company_name2")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("company_short_name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("cover_handling_fee_div")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("customer_f")
                        .HasColumnType("integer");

                    b.Property<string>("customer_person_name")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("customer_president_name")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<int>("cutoff_date1")
                        .HasColumnType("integer");

                    b.Property<int?>("cutoff_date2")
                        .HasColumnType("integer");

                    b.Property<int?>("cutoff_date3")
                        .HasColumnType("integer");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<int?>("dept_cost")
                        .HasColumnType("integer");

                    b.Property<int>("destination_f")
                        .HasColumnType("integer");

                    b.Property<string>("detail_reconcile_f")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("edi_conv_cd")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("emp_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("emp_mail_address")
                        .IsRequired()
                        .HasMaxLength(240)
                        .HasColumnType("character varying(240)");

                    b.Property<string>("emp_phone")
                        .IsRequired()
                        .HasMaxLength(240)
                        .HasColumnType("character varying(240)");

                    b.Property<int?>("employee_count")
                        .HasColumnType("integer");

                    b.Property<string>("ex_edi_company_cd")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("export_f")
                        .HasColumnType("integer");

                    b.Property<string>("extension_no")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("fax_no")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int?>("flag4")
                        .HasColumnType("integer");

                    b.Property<int?>("flag5")
                        .HasColumnType("integer");

                    b.Property<int?>("flag6")
                        .HasColumnType("integer");

                    b.Property<int?>("flag7")
                        .HasColumnType("integer");

                    b.Property<int?>("flag8")
                        .HasColumnType("integer");

                    b.Property<string>("group_cd")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("half_width_item_name")
                        .HasColumnType("integer");

                    b.Property<int?>("hold_man_hour")
                        .HasColumnType("integer");

                    b.Property<int?>("import_f")
                        .HasColumnType("integer");

                    b.Property<int?>("invalid_f")
                        .HasColumnType("integer");

                    b.Property<string>("kana")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<int>("maker_f")
                        .HasColumnType("integer");

                    b.Property<int>("outsourcer_f")
                        .HasColumnType("integer");

                    b.Property<string>("payee_bank_cd")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("payee_cd")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("payer_bank_cd")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("peyee_bank_account_cd")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("peyee_bank_account_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("place_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("place_f")
                        .HasColumnType("integer");

                    b.Property<int?>("plan_activity")
                        .HasColumnType("integer");

                    b.Property<int?>("plan_cc_days")
                        .HasColumnType("integer");

                    b.Property<string>("plan_cc_display_f")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("plan_cc_div")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<int?>("plan_cc_months")
                        .HasColumnType("integer");

                    b.Property<string>("plan_prod_del_f")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<int?>("plan_py_days")
                        .HasColumnType("integer");

                    b.Property<string>("plan_py_div")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<int?>("plan_py_months")
                        .HasColumnType("integer");

                    b.Property<string>("po_if_div")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("post_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("postal_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("provide_f")
                        .HasColumnType("integer");

                    b.Property<string>("pu_emp_cd")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("pu_rd_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("pu_tax_calc_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("pu_tax_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("pu_tax_rd_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("pu_unitprice_ratio")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("py_assess_f")
                        .HasColumnType("integer");

                    b.Property<int?>("py_cash_limit1")
                        .HasColumnType("integer");

                    b.Property<int?>("py_cash_limit2")
                        .HasColumnType("integer");

                    b.Property<int?>("py_cash_ratio1")
                        .HasColumnType("integer");

                    b.Property<int?>("py_cash_ratio2")
                        .HasColumnType("integer");

                    b.Property<int?>("py_cutoff_date1")
                        .HasColumnType("integer");

                    b.Property<string>("py_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("py_post_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("py_transf_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("remarks1")
                        .HasMaxLength(240)
                        .HasColumnType("character varying(240)");

                    b.Property<string>("remarks2")
                        .HasMaxLength(240)
                        .HasColumnType("character varying(240)");

                    b.Property<string>("sa_emp_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("sa_materiel_unit_div")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("sa_rd_div")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("sa_tax_calc_div")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("sa_tax_div")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("sa_tax_rd_div")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("sa_unitprice_ratio")
                        .HasColumnType("integer");

                    b.Property<int?>("sh_slip_row_count")
                        .HasColumnType("integer");

                    b.Property<string>("short_name_kana")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<int?>("sight_notes_payable")
                        .HasColumnType("integer");

                    b.Property<int?>("sight_notes_receivable")
                        .HasColumnType("integer");

                    b.Property<int>("supplier_f")
                        .HasColumnType("integer");

                    b.Property<string>("tel_no")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int?>("total_bill_f")
                        .HasColumnType("integer");

                    b.Property<string>("transf_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("transport_lt")
                        .HasColumnType("integer");

                    b.Property<int>("transpost_f")
                        .HasColumnType("integer");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("work_unitprice")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("company");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Function", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<string>("description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("icon")
                        .HasColumnType("text");

                    b.Property<bool>("is_active")
                        .HasColumnType("boolean");

                    b.Property<string>("method")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("module")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("order")
                        .HasColumnType("integer");

                    b.Property<string>("parent_cd")
                        .HasColumnType("text");

                    b.Property<Guid?>("parentid")
                        .HasColumnType("uuid");

                    b.Property<string>("path")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("url")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.HasKey("id");

                    b.HasIndex("parentid");

                    b.ToTable("function");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Inventory", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("address")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("note")
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("inventory");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Item", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("account_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("account_cd2")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<string>("admin_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("calc_by_prod_f")
                        .HasMaxLength(1)
                        .HasColumnType("integer");

                    b.Property<string>("calc_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("care_div")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("class_cd1")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("class_cd2")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("class_cd3")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("class_cd4")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("class_cd5")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("class_cd6")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("company_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<string>("drawing_no")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("inspect_div")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<int?>("invalid_f")
                        .HasMaxLength(1)
                        .HasColumnType("integer");

                    b.Property<string>("item_name3")
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("item_name4")
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("item_type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int?>("llc")
                        .HasColumnType("integer");

                    b.Property<string>("location")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int?>("loss_qty")
                        .HasColumnType("integer");

                    b.Property<string>("lot_admin_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("machine_cd")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("material_quality_cd")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("materiel_unitprice10")
                        .HasColumnType("integer");

                    b.Property<int?>("materiel_unitprice11")
                        .HasColumnType("integer");

                    b.Property<int?>("materiel_unitprice12")
                        .HasColumnType("integer");

                    b.Property<int?>("materiel_unitprice13")
                        .HasColumnType("integer");

                    b.Property<int?>("materiel_unitprice14")
                        .HasColumnType("integer");

                    b.Property<int?>("materiel_unitprice15")
                        .HasColumnType("integer");

                    b.Property<int?>("materiel_unitprice2")
                        .HasColumnType("integer");

                    b.Property<int?>("materiel_unitprice3")
                        .HasColumnType("integer");

                    b.Property<int?>("materiel_unitprice4")
                        .HasColumnType("integer");

                    b.Property<int?>("materiel_unitprice5")
                        .HasColumnType("integer");

                    b.Property<int?>("materiel_unitprice6")
                        .HasColumnType("integer");

                    b.Property<int?>("materiel_unitprice7")
                        .HasColumnType("integer");

                    b.Property<int?>("materiel_unitprice8")
                        .HasColumnType("integer");

                    b.Property<int?>("materiel_unitprice9")
                        .HasColumnType("integer");

                    b.Property<int?>("min_stock_qty")
                        .HasColumnType("integer");

                    b.Property<string>("model_number")
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("name1")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("name2")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<int?>("optsize1")
                        .HasColumnType("integer");

                    b.Property<int?>("optsize10")
                        .HasColumnType("integer");

                    b.Property<int?>("optsize2")
                        .HasColumnType("integer");

                    b.Property<int?>("optsize3")
                        .HasColumnType("integer");

                    b.Property<int?>("optsize4")
                        .HasColumnType("integer");

                    b.Property<int?>("optsize5")
                        .HasColumnType("integer");

                    b.Property<int?>("optsize6")
                        .HasColumnType("integer");

                    b.Property<int?>("optsize7")
                        .HasColumnType("integer");

                    b.Property<int?>("optsize8")
                        .HasColumnType("integer");

                    b.Property<int?>("optsize9")
                        .HasColumnType("integer");

                    b.Property<int>("per_weight")
                        .HasColumnType("integer");

                    b.Property<int?>("pieces")
                        .HasColumnType("integer");

                    b.Property<string>("place_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("po_slip_issue_f")
                        .HasMaxLength(1)
                        .HasColumnType("integer");

                    b.Property<int?>("pp_counter")
                        .HasColumnType("integer");

                    b.Property<string>("procure_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("prod_arrange_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("prod_lot_qty")
                        .HasColumnType("integer");

                    b.Property<int?>("prod_lt")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("prod_max_lot_qty")
                        .HasColumnType("integer");

                    b.Property<string>("provide_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("sa_unitprice")
                        .HasColumnType("integer");

                    b.Property<string>("short_name_kana")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<int?>("size1")
                        .HasColumnType("integer");

                    b.Property<int?>("size2")
                        .HasColumnType("integer");

                    b.Property<int?>("size3")
                        .HasColumnType("integer");

                    b.Property<int?>("size4")
                        .HasColumnType("integer");

                    b.Property<int?>("specific_gravity")
                        .HasColumnType("integer");

                    b.Property<string>("standard")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("std_unit")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("std_unitprice")
                        .HasColumnType("integer");

                    b.Property<string>("stock_admin_div")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("stock_qty_basis")
                        .HasColumnType("integer");

                    b.Property<string>("tax_div")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("term_calc_value")
                        .HasColumnType("integer");

                    b.Property<string>("unit2")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("unit_conv_f")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<int>("unit_conv_rate")
                        .HasColumnType("integer");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("company_cd");

                    b.HasIndex("item_type");

                    b.HasIndex("machine_cd");

                    b.HasIndex("place_cd");

                    b.ToTable("item");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.ItemBuyPrices", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("auxiliary_price")
                        .HasColumnType("integer");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("currency")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<Guid?>("customer")
                        .HasColumnType("uuid");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("effective_enddate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("effective_startdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("item_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("meterial_price")
                        .HasColumnType("integer");

                    b.Property<int?>("min_qty")
                        .HasColumnType("integer");

                    b.Property<int?>("price")
                        .HasColumnType("integer");

                    b.Property<int?>("process_price")
                        .HasColumnType("integer");

                    b.Property<string>("unit")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("item_cd");

                    b.ToTable("item_buy_prices");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.ItemPrice", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("auxiliary_price")
                        .HasColumnType("integer");

                    b.Property<int?>("basic_qty")
                        .HasColumnType("integer");

                    b.Property<int?>("buy_price")
                        .HasColumnType("integer");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("currency")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<Guid?>("customer_cd")
                        .HasColumnType("uuid");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("effective_enddate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("effective_startdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("item_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("meterial_price")
                        .HasColumnType("integer");

                    b.Property<int?>("min_qty")
                        .HasColumnType("integer");

                    b.Property<int?>("process_price")
                        .HasColumnType("integer");

                    b.Property<int?>("sale_price")
                        .HasColumnType("integer");

                    b.Property<string>("unit")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("item_cd");

                    b.ToTable("item_price");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.ItemSalePrices", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("currency")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<Guid?>("customer")
                        .HasColumnType("uuid");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("effective_enddate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("effective_startdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("item_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("min_qty")
                        .HasColumnType("integer");

                    b.Property<int>("price")
                        .HasColumnType("integer");

                    b.Property<string>("unit")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("item_cd");

                    b.ToTable("item_sale_prices");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.LogAction", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("body")
                        .HasColumnType("text");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<string>("ip")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("message")
                        .HasColumnType("text");

                    b.Property<string>("method")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("path")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("log_action");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.LogException", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<string>("function")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("message")
                        .HasColumnType("text");

                    b.Property<string>("stack_trace")
                        .HasColumnType("text");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("log_exception");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Machine", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("admin_id")
                        .HasColumnType("uuid");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<string>("department_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<DateTime>("effective_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("mold_cd")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasMaxLength(240)
                        .HasColumnType("character varying(240)");

                    b.Property<int?>("size1")
                        .HasColumnType("integer");

                    b.Property<int?>("size2")
                        .HasColumnType("integer");

                    b.Property<int?>("size3")
                        .HasColumnType("integer");

                    b.Property<string>("supplier_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("type")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("admin_id");

                    b.HasIndex("department_cd");

                    b.HasIndex("supplier_cd");

                    b.ToTable("machine");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Manufactory", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("address")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<string>("lat")
                        .HasColumnType("text");

                    b.Property<string>("lon")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("manufactory");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.MasterCode", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<string>("key")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("master_code");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Permission", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<string>("function_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("role_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("function_cd");

                    b.HasIndex("role_cd");

                    b.ToTable("permission");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.ReceiveOrder", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("branch_cd")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("code")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasDefaultValueSql("replace(concat(TO_CHAR(now(),'yyyyMMdd'), TO_CHAR(nextval('sq_receive_order'),'0000000')), ' ', '')");

                    b.Property<string>("company_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("order_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("order_status")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("remarks")
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<decimal?>("s_total_cost")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("user_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("id");

                    b.HasIndex("branch_cd");

                    b.HasIndex("company_cd");

                    b.HasIndex("user_cd");

                    b.ToTable("receive_order");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.ReceiveOrderDt", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("company_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<string>("delivery_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("item_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("item_name")
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("r_order_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<decimal?>("r_order_cost")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("r_order_dl")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("r_order_input")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("r_order_pieces_qty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("r_order_qty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("r_order_unit_price")
                        .HasColumnType("numeric");

                    b.Property<string>("remarks")
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("warehouse_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("id");

                    b.HasIndex("delivery_cd");

                    b.HasIndex("item_cd");

                    b.HasIndex("r_order_cd");

                    b.HasIndex("warehouse_cd");

                    b.ToTable("receive_order_dt");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Resource", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<string>("key")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("lang")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("module")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("screen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("resource");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Role", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<string>("description")
                        .HasMaxLength(240)
                        .HasColumnType("character varying(240)");

                    b.Property<string>("is_actived")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("role");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.SalePlan", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("company_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<string>("item_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("item_edi_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("item_name1")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("item_name2")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("item_type")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("order_qty")
                        .HasColumnType("integer");

                    b.Property<string>("order_unit")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<DateTime>("order_ym")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("standad_unit_qty")
                        .HasColumnType("integer");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("sale_plan");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Seq", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<int>("no")
                        .HasColumnType("integer");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("seq");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("branch_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<string>("deparment_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("furigana")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("hashpass")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool?>("is_actived")
                        .HasColumnType("boolean");

                    b.Property<string>("jobtitle_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("mail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("phone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("role_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("salt")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("id");

                    b.HasIndex("branch_cd");

                    b.HasIndex("deparment_cd");

                    b.HasIndex("jobtitle_cd");

                    b.HasIndex("role_cd");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Warehouses", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("address")
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("capacity")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("control_cd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("control_company")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("del_flg")
                        .HasColumnType("boolean");

                    b.Property<string>("item_info")
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("person_cd1")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("person_cd2")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("phone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("postcode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("remarks")
                        .HasMaxLength(240)
                        .HasColumnType("character varying(240)");

                    b.Property<int>("rent_price")
                        .HasColumnType("integer");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("warehouses");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Calendar", b =>
                {
                    b.HasOne("Seisankanri.Model.Entities.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyid");

                    b.Navigation("company");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Function", b =>
                {
                    b.HasOne("Seisankanri.Model.Entities.Function", "parent")
                        .WithMany()
                        .HasForeignKey("parentid");

                    b.Navigation("parent");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Item", b =>
                {
                    b.HasOne("Seisankanri.Model.Entities.Company", "company")
                        .WithMany("item_companys")
                        .HasForeignKey("company_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seisankanri.Model.Entities.Classification", "type")
                        .WithMany("item_types")
                        .HasForeignKey("item_type")
                        .HasPrincipalKey("code2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seisankanri.Model.Entities.Machine", "machine")
                        .WithMany("items")
                        .HasForeignKey("machine_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Seisankanri.Model.Entities.Company", "place")
                        .WithMany("item_places")
                        .HasForeignKey("place_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("company");

                    b.Navigation("machine");

                    b.Navigation("place");

                    b.Navigation("type");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.ItemBuyPrices", b =>
                {
                    b.HasOne("Seisankanri.Model.Entities.Item", "item")
                        .WithMany("item_buy_prices")
                        .HasForeignKey("item_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("item");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.ItemPrice", b =>
                {
                    b.HasOne("Seisankanri.Model.Entities.Item", "item")
                        .WithMany("item_prices")
                        .HasForeignKey("item_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("item");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.ItemSalePrices", b =>
                {
                    b.HasOne("Seisankanri.Model.Entities.Item", "item")
                        .WithMany("item_sale_prices")
                        .HasForeignKey("item_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("item");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Machine", b =>
                {
                    b.HasOne("Seisankanri.Model.Entities.User", "admin")
                        .WithMany()
                        .HasForeignKey("admin_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Seisankanri.Model.Entities.Classification", "department")
                        .WithMany("machines")
                        .HasForeignKey("department_cd")
                        .HasPrincipalKey("code2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seisankanri.Model.Entities.Company", "supplier")
                        .WithMany("machines")
                        .HasForeignKey("supplier_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("admin");

                    b.Navigation("department");

                    b.Navigation("supplier");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Permission", b =>
                {
                    b.HasOne("Seisankanri.Model.Entities.Function", "function")
                        .WithMany("permissions")
                        .HasForeignKey("function_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seisankanri.Model.Entities.Role", "role")
                        .WithMany("permissions")
                        .HasForeignKey("role_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("function");

                    b.Navigation("role");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.ReceiveOrder", b =>
                {
                    b.HasOne("Seisankanri.Model.Entities.Company", "branch")
                        .WithMany("receive_order_branchs")
                        .HasForeignKey("branch_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Seisankanri.Model.Entities.Company", "company")
                        .WithMany("receive_order_companys")
                        .HasForeignKey("company_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seisankanri.Model.Entities.User", "user")
                        .WithMany("receive_orders")
                        .HasForeignKey("user_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("branch");

                    b.Navigation("company");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.ReceiveOrderDt", b =>
                {
                    b.HasOne("Seisankanri.Model.Entities.Company", "delivery")
                        .WithMany("receive_order_dt_deliverys")
                        .HasForeignKey("delivery_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seisankanri.Model.Entities.Item", "item")
                        .WithMany("receive_order_dts")
                        .HasForeignKey("item_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seisankanri.Model.Entities.ReceiveOrder", "receive_order")
                        .WithMany("details")
                        .HasForeignKey("r_order_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seisankanri.Model.Entities.Company", "warehouse")
                        .WithMany("receive_order_dt_warehouses")
                        .HasForeignKey("warehouse_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("delivery");

                    b.Navigation("item");

                    b.Navigation("receive_order");

                    b.Navigation("warehouse");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.User", b =>
                {
                    b.HasOne("Seisankanri.Model.Entities.Company", "branch")
                        .WithMany("users")
                        .HasForeignKey("branch_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seisankanri.Model.Entities.Classification", "department")
                        .WithMany("user_departments")
                        .HasForeignKey("deparment_cd")
                        .HasPrincipalKey("code2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seisankanri.Model.Entities.Classification", "jobtitle")
                        .WithMany("user_jobtitles")
                        .HasForeignKey("jobtitle_cd")
                        .HasPrincipalKey("code2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Seisankanri.Model.Entities.Role", "role")
                        .WithMany("users")
                        .HasForeignKey("role_cd")
                        .HasPrincipalKey("code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("branch");

                    b.Navigation("department");

                    b.Navigation("jobtitle");

                    b.Navigation("role");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Classification", b =>
                {
                    b.Navigation("item_types");

                    b.Navigation("machines");

                    b.Navigation("user_departments");

                    b.Navigation("user_jobtitles");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Company", b =>
                {
                    b.Navigation("item_companys");

                    b.Navigation("item_places");

                    b.Navigation("machines");

                    b.Navigation("receive_order_branchs");

                    b.Navigation("receive_order_companys");

                    b.Navigation("receive_order_dt_deliverys");

                    b.Navigation("receive_order_dt_warehouses");

                    b.Navigation("users");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Function", b =>
                {
                    b.Navigation("permissions");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Item", b =>
                {
                    b.Navigation("item_buy_prices");

                    b.Navigation("item_prices");

                    b.Navigation("item_sale_prices");

                    b.Navigation("receive_order_dts");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Machine", b =>
                {
                    b.Navigation("items");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.ReceiveOrder", b =>
                {
                    b.Navigation("details");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.Role", b =>
                {
                    b.Navigation("permissions");

                    b.Navigation("users");
                });

            modelBuilder.Entity("Seisankanri.Model.Entities.User", b =>
                {
                    b.Navigation("receive_orders");
                });
#pragma warning restore 612, 618
        }
    }
}
